Requirement: You are a smart contract auditor, identify and explain {topk} most severe vulnerabilities in the provided smart contract. Make sure that they are exploitable in real world and beneficial to attackers. Provide each identified vulnerability with intermediate reasoning and its associated function. Remember, you must provide the entire function code and do not use "...". Make your reasoning comprehensive and detailed. Your analysis should strictly be limited to the following vulnerability types: Integer Overflow, Wrong Logic, Bad Randomness, Access Control, Typo Constructor, Token Devalue
 
Code Input: 
{code}

Format Requirement: 
You should ONLY output in below json format:
{{
    "output_list": [
        {{
            "function_name": "<function_name_1>",
            "code": "<code of the function1>",
            "vulnerability": "<short_vulnera_desc_1>",
            "reason": "<reason_1>"
        }},
        {{
            "function_name": "<function_name_2>",
            "code": "<code of the function2>",
            "vulnerability": "<short_vulnera_desc_2>",
            "reason": "<reason_2>"
        }},
        {{
            "function_name": "<function_name_3>",
            "code": "<code of the function3>",
            "vulnerability": "<short_vulnera_desc_3>",
            "reason": "<reason_3>"
        }}
    ]
}}

Note: If no vulnerability is detected, you should output empty json: {{"output_list": []}}.
Your Output:
