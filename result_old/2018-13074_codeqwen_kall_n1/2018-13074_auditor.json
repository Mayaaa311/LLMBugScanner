{
  "output_list": [
    {
      "function_name": "TokenERC20",
      "code": "function TokenERC20(uint256 initialSupply, string tokenName, string tokenSymbol) public { totalSupply = initialSupply * 10 ** uint256(decimals); balanceOf[msg.sender] = totalSupply; name = tokenName; symbol = tokenSymbol; }",
      "vulnerability": "Initial supply is hardcoded",
      "reason": "The initial supply of the token is set to 5,000,000,000 which can be easily manipulated by attackers. This could lead to unfair distribution of tokens and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). This could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the sender's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; emit Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances); }",
      "vulnerability": "Unchecked account balance",
      "reason": "The function does not check if the recipient's balance exceeds the maximum possible value (2^256 - 1). this could lead to an overflow and potentially loss of funds."
    },
    {
      "function_name": "_transfer",
      "code": "function _transfer(address _from, address _to, uint256 _value) internal { require (_to != 0x0); require (balanceOf[_from] >= _value); require (balanceOf[_to] + _value >= balanceOf[_to]);