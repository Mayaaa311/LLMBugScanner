{
    "output_list": [
        {
            "function_name": "GetMaxStageEthAmount",
            "code": "function GetMaxStageEthAmount() public constant returns(uint256){...}",
            "vulnerability": "Arithmetic overflow",
            "reason": "The function GetMaxStageEthAmount() calculates the maximum amount of ETH that can be bought in the current stage by dividing the stage sum by the stage price. However, if the stage sum is too large, the calculation may result in an arithmetic overflow, leading to incorrect results. This can be exploited by an attacker by sending a large amount of ETH to the contract, causing the calculation to fail and the attacker to receive less tokens than intended."
        },
        {
            "function_name": "GetStats",
            "code": "function GetStats()public constant returns (uint256,uint256,uint256,uint256){...}",
            "vulnerability": "Integer underflow",
            "reason": "The function GetStats() calculates the time to end and the round number based on the current time and the start time. However, if the current time is less than the start time, the calculation may result in an integer underflow, leading to incorrect results. This can be exploited by an attacker by setting the start time in the future, causing the calculation to fail and the attacker to receive incorrect stats."
        },
        {
            "function_name": "GetNow",
            "code": "function GetNow() public constant returns(uint256){...}",
            "vulnerability": "Integer underflow",
            "reason": "The function GetNow() returns the current time using the now keyword. However, if the current time is less than the start time, the calculation may result in an integer underflow, leading to incorrect results. This can be exploited by an attacker by setting the start time in the future, causing the calculation to fail and the attacker to receive incorrect stats."
        },
        {
            "function_name": "mintCoins",
            "code": "function mintCoins(address _to, uint256 _amount)  canMint internal returns (bool) {...}",
            "vulnerability": "Integer underflow",
            "reason": "The function mintCoins() calculates the amount of tokens to mint based on the amount of ETH to be minted. However, if the amount of ETH to be minted is too large, the calculation may result in an integer underflow, leading to incorrect results. This can be exploited by an attacker by sending a large amount of ETH to the contract, causing the calculation to fail and the attacker to receive less tokens than intended."
        },
        {
            "function_name": "mintCoins",
            "code": "function mintCoins(address _to, uint256 _amount)  canMint internal returns (bool) {...}",
            "vulnerability": "Integer overflow",
            "reason": "The function mintCoins() calculates the amount of tokens to mint based on the amount of ETH to be minted. However, if the amount of ETH to be minted is too large, the calculation may result in an integer overflow, leading to incorrect results. This can be exploited by an attacker by sending a large amount of ETH to the contract, causing the calculation to fail and the attacker to receive more tokens than intended."
        }
    ]
}