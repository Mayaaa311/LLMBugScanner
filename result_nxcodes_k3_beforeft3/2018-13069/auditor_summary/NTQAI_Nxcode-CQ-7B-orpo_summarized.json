{
    "output_list": [
        {
            "function_name": "TokenERC20",
            "code": "function TokenERC20(uint256 initialSupply, string tokenName, string tokenSymbol) public {
    totalSupply = initialSupply * 10 ** uint256(decimals);  
    balanceOf[msg.sender] = totalSupply;                
    name = tokenName;                                   
    symbol = tokenSymbol;                               
}",
            "vulnerability": "Integer Overflow",
            "reason": "The initialSupply is multiplied by 10 ** uint256(decimals) without checking for overflow. If initialSupply is too large, it will cause an integer overflow and the totalSupply will be incorrect."
        },
        {
            "function_name": "_transfer",
            "code": "function _transfer(address _from, address _to, uint _value) internal {
    require (_to != 0x0);
    require(balanceOf[_from] >= _value);
    require(balanceOf[_to] + _value > balanceOf[_to]);
    uint previousBalances = balanceOf[_from] + balanceOf[_to];
    balanceOf[_from] -= _value;
    balanceOf[_to] += _value;
    Transfer(_from, _to, _value);
    assert(balanceOf[_from] + balanceOf[_to] == previousBalances);
}",
            "vulnerability": "Integer Overflow",
            "reason": "The balanceOf[_from] -= _value; line can cause an integer overflow if _value is too large. If _value is greater than balanceOf[_from], it will cause an underflow and the balanceOf[_from] will become negative."
        },
        {
            "function_name": "_transfer",
            "code": "function _transfer(address _from, address _to, uint _value) internal {
    require (_to != 0x0);
    require(balanceOf[_from] >= _value);
    require(balanceOf[_to] + _value > balanceOf[_to]);
    uint previousBalances = balanceOf[_from] + balanceOf[_to];
    balanceOf[_from] -= _value;
    balanceOf[_to] += _value;
    Transfer(_from, _to, _value);
    assert(balanceOf[_from] + balanceOf[_to] == previousBalances);
}",
            "vulnerability": "Integer Overflow",
            "reason": "The balanceOf[_to] += _value; line can cause an integer overflow if _value is too large. If _value is greater than the maximum value that can be stored in the uint256 type, it will cause an overflow and the balanceOf[_to] will become incorrect."
        }
    ]
}