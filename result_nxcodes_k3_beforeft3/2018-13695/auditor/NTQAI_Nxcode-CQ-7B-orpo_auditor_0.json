{
    "output_list": [
        {
            "function_name": "mint",
            "code": "function mint(address receiver, uint amount) public { tokenAmount = ((msg.value*rate)/(1 ether)); if (tokenAmount != amount || amount == 0 || receiver != msg.sender) { revert(); } totalSupply = totalSupply + (amount*1 ether); balances[receiver] += (amount*1 ether); Transfer(0, receiver, (amount*1 ether)); }",
            "vulnerability": "Integer Overflow",
            "reason": "The function `mint` takes two parameters `receiver` and `amount`. The `amount` is multiplied by `rate` and then divided by `1 ether` to get `tokenAmount`. If `tokenAmount` is not equal to `amount`, `amount` is not equal to 0, or `receiver` is not equal to `msg.sender`, the function reverts. The `totalSupply` is increased by `amount*1 ether`. The `balances` mapping is updated with `amount*1 ether`. The `Transfer` event is emitted. However, the `totalSupply` is not checked for overflow. If `amount` is too large, it can cause an integer overflow. This can be exploited by an attacker to cause the contract to mint more tokens than intended."
        },
        {
            "function_name": "()",
            "code": "function () payable { uint256 oldSupply = totalSupply; totalSupply = (totalSupply/1 ether); if (totalSupply > 999999) { revert(); } if (totalSupply < 25000) { rate = 3340; } if (totalSupply >= 25000) { rate = 668; } if (totalSupply >= 125000) { rate = 334; } if (totalSupply >= 525000) { rate = 134; } tokenAmount = 0; tokenAmount = ((msg.value*rate)/(1 ether)); if (tokenAmount < 0) { revert(); } check = 0; check = safeAdd(totalSupply, tokenAmount); if (check > 1000000) { revert(); } if (totalSupply < 25000 && check > 25000) { revert(); } if (totalSupply < 125000 && check > 125000) { revert(); } if (totalSupply < 525000 && check > 525000) { revert(); } uint256 senderBalance = (balances[msg.sender]/1 ether); if ((senderBalance + tokenAmount) > 50 && totalSupply < 25000) { revert(); } totalSupply = oldSupply; mint(msg.sender, tokenAmount); tokenAmount = 0; check = 0; rate = 0; Founder1.transfer((msg.value/3)); Founder2.transfer((msg.value/3)); Founder3.transfer((msg.value/3)); }",
            "vulnerability": "Integer Overflow",
            "reason": "The function `()` takes a `payable` parameter and is called when the contract receives a payment. The `totalSupply` is divided by `1 ether` to get `oldSupply`. The `totalSupply` is then checked for overflow. If `totalSupply` is greater than 999999, the function reverts. The `rate` is set based on the `totalSupply`. The `tokenAmount` is calculated based on the `msg.value` and `rate`. If `tokenAmount` is less than 0, the function reverts. The `check` variable is used to prevent integer overflow. If `check` is greater than 1000000, the function reverts. The `totalSupply` is checked for overflow. If `totalSupply` is less than 25000 and `check` is greater than 25000, the function reverts. If `totalSupply` is less than 125000 and `check` is greater than 125000, the function reverts. If `totalSupply` is less than 525000 and `check` is greater than 525000, the function reverts. The `senderBalance` is calculated based on the `balances` mapping. If `senderBalance` plus `tokenAmount` is greater than 50 and `totalSupply` is less than 25000, the function reverts. The `totalSupply` is set to `oldSupply`. The `mint` function is called with `msg.sender` and `tokenAmount`. The `tokenAmount` is set to 0. The `check` variable is set to 0. The `rate` is set to 0. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses are transferred the value of `msg.value` divided by 3. The `Founder1`, `Founder2`, and `Founder3` addresses