{
    "output_list": [
        {
            "function_name": "mint",
            "code": "function mint(address wallet, address buyer, uint256 tokenAmount) public onlyOwner { require(tokenBalances[wallet] >= tokenAmount);               tokenBalances[buyer] = tokenBalances[buyer].add(tokenAmount);                  tokenBalances[wallet] = tokenBalances[wallet].add(tokenAmount);                        Transfer(wallet, buyer, tokenAmount); 
    totalSupply=totalSupply.sub(tokenAmount);
    }",
            "vulnerability": "Integer Overflow",
            "reason": "In the mint function, the totalSupply is decreased by tokenAmount, but the tokenAmount is not checked for overflow. This could lead to an integer underflow, resulting in a loss of tokens."
        },
        {
            "function_name": "pullBack",
            "code": "function pullBack(address wallet, address buyer, uint256 tokenAmount) public onlyOwner { require(tokenBalances[buyer]>=tokenAmount);               tokenBalances[buyer] = tokenBalances[buyer].sub(tokenAmount);                  tokenBalances[wallet] = tokenBalances[wallet].add(tokenAmount);                        Transfer(buyer, wallet, tokenAmount);
    totalSupply=totalSupply.add(tokenAmount);
    }",
            "vulnerability": "Integer Overflow",
            "reason": "In the pullBack function, the totalSupply is increased by tokenAmount, but the tokenAmount is not checked for overflow. This could lead to an integer overflow, resulting in an increase in tokens."
        },
        {
            "function_name": "mint",
            "code": "function mint(address wallet, address buyer, uint256 tokenAmount) public onlyOwner { require(tokenBalances[wallet] >= tokenAmount);               tokenBalances[buyer] = tokenBalances[buyer].add(tokenAmount);                  tokenBalances[wallet] = tokenBalances[wallet].add(tokenAmount);                        Transfer(wallet, buyer, tokenAmount); 
    totalSupply=totalSupply.sub(tokenAmount);
    }",
            "vulnerability": "Access Control",
            "reason": "The mint function is only callable by the contract owner. However, it does not check if the wallet address is a valid address. This could allow anyone to mint tokens without the owner's permission."
        }
    ]
}