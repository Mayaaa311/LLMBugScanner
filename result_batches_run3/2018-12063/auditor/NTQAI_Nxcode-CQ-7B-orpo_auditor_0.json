{
    "output_list": [
        {
            "function_name": "INTToken",
            "code": "function INTToken(uint256 initialSupply, string tokenName, uint8 decimalUnits, string tokenSymbol) token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}",
            "vulnerability": "Typo Constructor",
            "reason": "The constructor of the contract INTToken is named as 'INTToken', but it should be 'INT' as per the contract name 'INT'."
        },
        {
            "function_name": "INTToken",
            "code": "function _transfer(address _from, address _to, uint _value) internal { require (_to != 0x0); require (balanceOf[_from] > _value); require (balanceOf[_to] + _value > balanceOf[_to]); require(!frozenAccount[_from]); require(!frozenAccount[_to]); balanceOf[_from] -= _value; balanceOf[_to] += _value; Transfer(_from, _to, _value); }",
            "vulnerability": "Access Control",
            "reason": "The function _transfer is accessible to anyone, which can lead to unauthorized transfers of tokens. It should only be accessible to the owner of the contract."
        },
        {
            "function_name": "INTToken",
            "code": "function mintToken(address target, uint256 mintedAmount) onlyOwner { balanceOf[target] += mintedAmount; totalSupply += mintedAmount; Transfer(0, this, mintedAmount); Transfer(this, target, mintedAmount); }",
            "vulnerability": "Access Control",
            "reason": "The function mintToken is accessible to anyone, which can lead to unauthorized minting of tokens. It should only be accessible to the owner of the contract."
        },
        {
            "function_name": "INTToken",
            "code": "function freezeAccount(address target, bool freeze) onlyOwner { frozenAccount[target] = freeze; FrozenFunds(target, freeze); }",
            "vulnerability": "Access Control",
            "reason": "The function freezeAccount is accessible to anyone, which can lead to unauthorized freezing of accounts. It should only be accessible to the owner of the contract."
        },
        {
            "function_name": "INTToken",
            "code": "function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner { sellPrice = newSellPrice; buyPrice = newBuyPrice; }",
            "vulnerability": "Access Control",
            "reason": "The function setPrices is accessible to anyone, which can lead to unauthorized setting of prices. It should only be accessible to the owner of the contract."
        }
    ]
}