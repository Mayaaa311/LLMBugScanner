{
    "output_list": [
        {
            "function_name": "quaker",
            "code": "function quaker(address wallet) public { owner = msg.sender; ownerWallet=wallet; totalSupply = INITIAL_SUPPLY * 10 ** 18; tokenBalances[wallet] = INITIAL_SUPPLY * 10 ** 18;   }",
            "vulnerability": "Access Control",
            "reason": "The contract does not have any access control mechanism to restrict the owner of the contract. This can be exploited by anyone to mint tokens and control the contract."
        },
        {
            "function_name": "mint",
            "code": "function mint(address wallet, address buyer, uint256 tokenAmount) public onlyOwner { require(tokenBalances[wallet] >= tokenAmount);               tokenBalances[buyer] = tokenBalances[buyer].add(tokenAmount);                  tokenBalances[wallet] = tokenBalances[wallet].add(tokenAmount);                        Transfer(wallet, buyer, tokenAmount);  totalSupply=totalSupply.sub(tokenAmount); }",
            "vulnerability": "Access Control",
            "reason": "The mint function is only accessible to the owner of the contract. This can be exploited by anyone to mint tokens and control the contract."
        },
        {
            "function_name": "pullBack",
            "code": "function pullBack(address wallet, address buyer, uint256 tokenAmount) public onlyOwner { require(tokenBalances[buyer]>=tokenAmount); tokenBalances[buyer] = tokenBalances[buyer].sub(tokenAmount); tokenBalances[wallet] = tokenBalances[wallet].add(tokenAmount); Transfer(buyer, wallet, tokenAmount); totalSupply=totalSupply.add(tokenAmount); }",
            "vulnerability": "Access Control",
            "reason": "The pullBack function is only accessible to the owner of the contract. This can be exploited by anyone to pull back tokens and control the contract."
        },
        {
            "function_name": "totalSupply",
            "code": "function totalSupply() public constant returns (uint) { return totalSupply  - tokenBalances[address(0)]; }",
            "vulnerability": "Typo Constructor",
            "reason": "The totalSupply function is not returning the correct total supply. It is subtracting the balance of address(0) from the total supply, which is not the correct way to calculate the total supply."
        },
        {
            "function_name": "totalSupply",
            "code": "function totalSupply() public constant returns (uint) { return totalSupply  - tokenBalances[address(0)]; }",
            "vulnerability": "Token Devalue",
            "reason": "The totalSupply function is not returning the correct total supply. It is subtracting the balance of address(0) from the total supply, which is not the correct way to calculate the total supply. This can be exploited by anyone to devalue the tokens by transferring tokens to address(0)."
        }
    ]
}